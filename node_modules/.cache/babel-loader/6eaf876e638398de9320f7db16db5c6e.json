{"ast":null,"code":"var _jsxFileName = \"/home/jasper/reactJs/src/components/pagination.jsx\";\nimport React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nvar Paging = function Paging(props) {\n  var totalItems = props.totalItems,\n      pageSize = props.pageSize,\n      onPageChange = props.onPageChange,\n      currentPage = props.currentPage;\n  var pagesCount = Math.ceil(totalItems / pageSize);\n  console.log(currentPage); // if (pagesCount === 1) return null;\n\n  var pages = _.range(1, pagesCount + 1);\n\n  return React.createElement(\"nav\", {\n    \"aria-label\": \"Page navigation example\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"ul\", {\n    className: \"pagination\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, pages.map(function (page) {\n    return React.createElement(\"li\", {\n      key: page,\n      className: page === currentPage ? \"page-item active\" : \"page-item\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"page-link\",\n      onClick: function onClick() {\n        return onPageChange(page);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, page));\n  })));\n};\n\nPaging.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\nexport default Paging;","map":{"version":3,"sources":["/home/jasper/reactJs/src/components/pagination.jsx"],"names":["React","_","PropTypes","Paging","props","totalItems","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","console","log","pages","range","map","page","propTypes","number","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,CAAP,MAAc,QAAd;AACA,OAAOC,SAAP,MAAsB,YAAtB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAAAC,KAAK,EAAI;AAAA,MACdC,UADc,GACsCD,KADtC,CACdC,UADc;AAAA,MACFC,QADE,GACsCF,KADtC,CACFE,QADE;AAAA,MACQC,YADR,GACsCH,KADtC,CACQG,YADR;AAAA,MACsBC,WADtB,GACsCJ,KADtC,CACsBI,WADtB;AAEtB,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAL,CAAUN,UAAU,GAAGC,QAAvB,CAAnB;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAYL,WAAZ,EAHsB,CAKtB;;AAEA,MAAMM,KAAK,GAAGb,CAAC,CAACc,KAAF,CAAQ,CAAR,EAAWN,UAAU,GAAG,CAAxB,CAAd;;AACA,SACE;AAAK,kBAAW,yBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGK,KAAK,CAACE,GAAN,CAAU,UAAAC,IAAI;AAAA,WACb;AACE,MAAA,GAAG,EAAEA,IADP;AAEE,MAAA,SAAS,EAAEA,IAAI,KAAKT,WAAT,GAAuB,kBAAvB,GAA4C,WAFzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAyB,MAAA,OAAO,EAAE;AAAA,eAAMD,YAAY,CAACU,IAAD,CAAlB;AAAA,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGA,IADH,CAJF,CADa;AAAA,GAAd,CADH,CADF,CADF;AAgBD,CAxBD;;AA0BAd,MAAM,CAACe,SAAP,GAAmB;AACjBb,EAAAA,UAAU,EAAEH,SAAS,CAACiB,MAAV,CAAiBC,UADZ;AAEjBd,EAAAA,QAAQ,EAAEJ,SAAS,CAACiB,MAAV,CAAiBC,UAFV;AAGjBb,EAAAA,YAAY,EAAEL,SAAS,CAACmB,IAAV,CAAeD,UAHZ;AAIjBZ,EAAAA,WAAW,EAAEN,SAAS,CAACiB,MAAV,CAAiBC;AAJb,CAAnB;AAOA,eAAejB,MAAf","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\n\nconst Paging = props => {\n  const { totalItems, pageSize, onPageChange, currentPage } = props;\n  const pagesCount = Math.ceil(totalItems / pageSize);\n  console.log(currentPage);\n\n  // if (pagesCount === 1) return null;\n\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <nav aria-label=\"Page navigation example\">\n      <ul className=\"pagination\">\n        {pages.map(page => (\n          <li\n            key={page}\n            className={page === currentPage ? \"page-item active\" : \"page-item\"}\n          >\n            <a className=\"page-link\" onClick={() => onPageChange(page)}>\n              {page}\n            </a>\n          </li>\n        ))}\n      </ul>\n    </nav>\n  );\n};\n\nPaging.propTypes = {\n  totalItems: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Paging;\n"]},"metadata":{},"sourceType":"module"}