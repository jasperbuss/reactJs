{"ast":null,"code":"import _objectSpread from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _toConsumableArray from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/jasper/reactJs/src/components/movies.jsx\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport React, { Component } from \"react\";\nimport \"font-awesome/css/font-awesome.css\";\nimport Paging from \"./pagination\";\nimport ListGroup from \"./listGroup\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport \"./movies.css\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\n\nvar Movies =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Movies, _Component);\n\n  function Movies() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Movies);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Movies)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      selectedGenre: null,\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    _this.handleDelete = function (id) {\n      var movies = _this.state.movies.filter(function (m) {\n        return m._id !== id._id;\n      });\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handleLike = function (movie) {\n      var movies = _toConsumableArray(_this.state.movies);\n\n      var index = movies.indexOf(movie);\n      movies[index].liked = !movies[index].liked;\n      console.log(movies[index].liked);\n\n      _this.setState({\n        movies: movies\n      });\n    };\n\n    _this.handlePageChange = function (page) {\n      _this.setState({\n        currentPage: page\n      });\n    };\n\n    _this.handleGenreSelect = function (genre) {\n      _this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    _this.handleSort = function (path) {\n      var sortColumn = _objectSpread({}, _this.state.sortColumn);\n\n      if (sortColumn.path === path) {\n        sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n      }\n\n      _this.setState({\n        sortColumn: {\n          path: path,\n          order: \"asc\"\n        }\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Movies, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var genres = [{\n        name: \"All Genres\"\n      }].concat(_toConsumableArray(getGenres()));\n      this.setState({\n        movies: getMovies(),\n        genres: genres\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var count = this.state.movies.length;\n      var _this$state = this.state,\n          pageSize = _this$state.pageSize,\n          currentPage = _this$state.currentPage,\n          allMovies = _this$state.movies,\n          selectedGenre = _this$state.selectedGenre,\n          sortColumn = _this$state.sortColumn;\n\n      if (count === 0) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"gibt keine videos alter\");\n      }\n\n      var filtered = selectedGenre && selectedGenre._id ? allMovies.filter(function (m) {\n        return m.genre._id === selectedGenre._id;\n      }) : allMovies;\n\n      var sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n      var movies = paginate(sorted, currentPage, pageSize);\n      return React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"col-3\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(ListGroup, {\n        items: this.state.genres,\n        selectedItem: this.state.selectedGenre,\n        onItemSelect: this.handleGenreSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"col\",\n        id: \"col\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"showing \", count), React.createElement(MoviesTable, {\n        movies: movies,\n        onDelete: this.handleDelete,\n        onLike: this.handleLike,\n        onSort: this.handleSort,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(Paging, {\n        totalItems: filtered.length,\n        pageSize: pageSize,\n        onPageChange: this.handlePageChange,\n        currentPage: currentPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Movies;\n}(Component);\n\nexport { Movies as default };","map":{"version":3,"sources":["/home/jasper/reactJs/src/components/movies.jsx"],"names":["getMovies","React","Component","Paging","ListGroup","paginate","getGenres","MoviesTable","_","Movies","state","movies","pageSize","currentPage","genres","selectedGenre","sortColumn","path","order","handleDelete","id","filter","m","_id","setState","handleLike","movie","index","indexOf","liked","console","log","handlePageChange","page","handleGenreSelect","genre","handleSort","name","count","length","allMovies","filtered","sorted","orderBy"],"mappings":"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","sourcesContent":["import { getMovies } from \"../services/fakeMovieService\";\nimport React, { Component } from \"react\";\nimport \"font-awesome/css/font-awesome.css\";\nimport Paging from \"./pagination\";\nimport ListGroup from \"./listGroup\";\nimport { paginate } from \"../utils/paginate\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport \"./movies.css\";\nimport MoviesTable from \"./moviesTable\";\nimport _ from \"lodash\";\n\nexport default class Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    selectedGenre: null,\n    sortColumn: { path: \"title\", order: \"asc\" }\n  };\n\n  componentDidMount() {\n    const genres = [{ name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = id => {\n    const movies = this.state.movies.filter(m => m._id !== id._id);\n    this.setState({ movies });\n  };\n\n  handleLike = movie => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index].liked = !movies[index].liked;\n    console.log(movies[index].liked);\n\n    this.setState({ movies });\n  };\n\n  handlePageChange = page => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = genre => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = path => {\n    const sortColumn = { ...this.state.sortColumn };\n\n    if (sortColumn.path === path) {\n      sortColumn.order = sortColumn.order === \"asc\" ? \"desc\" : \"asc\";\n    }\n    this.setState({ sortColumn: { path, order: \"asc\" } });\n  };\n\n  render() {\n    let { length: count } = this.state.movies;\n\n    const {\n      pageSize,\n      currentPage,\n      movies: allMovies,\n      selectedGenre,\n      sortColumn\n    } = this.state;\n\n    if (count === 0) {\n      return <p>gibt keine videos alter</p>;\n    }\n\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter(m => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-3\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\" id=\"col\">\n          <p>showing {count}</p>\n\n          <MoviesTable\n            movies={movies}\n            onDelete={this.handleDelete}\n            onLike={this.handleLike}\n            onSort={this.handleSort}\n          />\n\n          <Paging\n            totalItems={filtered.length}\n            pageSize={pageSize}\n            onPageChange={this.handlePageChange}\n            currentPage={currentPage}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}