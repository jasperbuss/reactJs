{"ast":null,"code":"import _classCallCheck from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/jasper/reactJs/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/jasper/reactJs/src/components/search.jsx\";\nimport React, { Component } from \"react\";\n\nvar CustomTextInput =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(CustomTextInput, _React$Component);\n\n  function CustomTextInput(props) {\n    var _this;\n\n    _classCallCheck(this, CustomTextInput);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(CustomTextInput).call(this, props)); // create a ref to store the textInput DOM element\n\n    _this.focusTextInput = function () {\n      // Explicitly focus the text input using the raw DOM API\n      // Note: we're accessing \"current\" to get the DOM node\n      _this.textInput.current.focus();\n    };\n\n    _this.textInput = React.createRef();\n    _this.focusTextInput = _this.focusTextInput.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(CustomTextInput, [{\n    key: \"render\",\n    value: function render() {\n      // tell React that we want to associate the <input> ref\n      // with the `textInput` that we created in the constructor\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        type: \"text\",\n        ref: this.textInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(\"input\", {\n        type: \"button\",\n        value: \"Focus the text input\",\n        onClick: this.focusTextInput,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return CustomTextInput;\n}(React.Component);\n\nexport default CustomTextInput; // import React, { Component } from \"react\";\n// class Searchbar extends Component {\n//   state = {\n//     query: \"\"\n//   };\n//   handleInputChange = () => {\n//     this.setState({ query: this.search.value });\n//   };\n//   render() {\n//     return (\n//       <form action=\"submit\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"search for\"\n//           onChange={this.handleInputChange}\n//         />\n//       </form>\n//     );\n//   }\n// }\n// export default Searchbar;","map":{"version":3,"sources":["/home/jasper/reactJs/src/components/search.jsx"],"names":["React","Component","CustomTextInput","props","focusTextInput","textInput","current","focus","createRef","bind"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;IAEMC,e;;;;;AACJ,2BAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,yFAAMA,KAAN,GADiB,CAEjB;;AAFiB,UAOnBC,cAPmB,GAOF,YAAM;AACrB;AACA;AACA,YAAKC,SAAL,CAAeC,OAAf,CAAuBC,KAAvB;AACD,KAXkB;;AAGjB,UAAKF,SAAL,GAAiBL,KAAK,CAACQ,SAAN,EAAjB;AACA,UAAKJ,cAAL,GAAsB,MAAKA,cAAL,CAAoBK,IAApB,uDAAtB;AAJiB;AAKlB;;;;6BAQQ;AACP;AACA;AACA,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,GAAG,EAAE,KAAKJ,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,EAGE;AACE,QAAA,IAAI,EAAC,QADP;AAEE,QAAA,KAAK,EAAC,sBAFR;AAGE,QAAA,OAAO,EAAE,KAAKD,cAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,CADF;AAWD;;;;EA5B2BJ,KAAK,CAACC,S;;AA+BpC,eAAeC,eAAf,C,CACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component } from \"react\";\n\nclass CustomTextInput extends React.Component {\n  constructor(props) {\n    super(props);\n    // create a ref to store the textInput DOM element\n    this.textInput = React.createRef();\n    this.focusTextInput = this.focusTextInput.bind(this);\n  }\n\n  focusTextInput = () => {\n    // Explicitly focus the text input using the raw DOM API\n    // Note: we're accessing \"current\" to get the DOM node\n    this.textInput.current.focus();\n  };\n\n  render() {\n    // tell React that we want to associate the <input> ref\n    // with the `textInput` that we created in the constructor\n    return (\n      <div>\n        <input type=\"text\" ref={this.textInput} />\n\n        <input\n          type=\"button\"\n          value=\"Focus the text input\"\n          onClick={this.focusTextInput}\n        />\n      </div>\n    );\n  }\n}\n\nexport default CustomTextInput;\n// import React, { Component } from \"react\";\n\n// class Searchbar extends Component {\n//   state = {\n//     query: \"\"\n//   };\n\n//   handleInputChange = () => {\n//     this.setState({ query: this.search.value });\n//   };\n//   render() {\n//     return (\n//       <form action=\"submit\">\n//         <input\n//           type=\"text\"\n//           placeholder=\"search for\"\n//           onChange={this.handleInputChange}\n//         />\n//       </form>\n//     );\n//   }\n// }\n\n// export default Searchbar;\n"]},"metadata":{},"sourceType":"module"}